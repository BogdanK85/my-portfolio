{"version":3,"file":"static/js/298.2f1ba7f0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","_classCallCheck","this","order","scheduled","Set","_createClass","key","value","process","has","add","push","index","indexOf","splice","delete","length","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","remove","frameData","_ref","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","wake","keepAlive","immediate","_createRenderBatcher","queueMicrotask","microtask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","matchedValues","indexes","var","types","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","_toConsumableArray","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}